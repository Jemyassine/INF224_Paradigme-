<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_multimedia" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Multimedia</compoundname>
    <derivedcompoundref refid="class_photo" prot="public" virt="non-virtual">Photo</derivedcompoundref>
    <derivedcompoundref refid="class_video" prot="public" virt="non-virtual">Video</derivedcompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_multimedia_1a58f835cc9f6520566094574971ce4033" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Multimedia::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>Multimedia::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/Multimedia.h" line="9" column="17" bodyfile="CPP/Multimedia.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_multimedia_1ae419d92973bfff542aa0b5e355436c52" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Multimedia::pathname</definition>
        <argsstring></argsstring>
        <name>pathname</name>
        <qualifiedname>Multimedia::pathname</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/Multimedia.h" line="10" column="17" bodyfile="CPP/Multimedia.h" bodystart="10" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_multimedia_1a7106753d618df92d53b89328b7ecfe7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Multimedia::Multimedia</definition>
        <argsstring>()</argsstring>
        <name>Multimedia</name>
        <qualifiedname>Multimedia::Multimedia</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/Multimedia.h" line="12" column="5" bodyfile="CPP/Multimedia.h" bodystart="12" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="class_multimedia_1a337b5ed495d27cd9d0319f90c898cf96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Multimedia::Multimedia</definition>
        <argsstring>(std::string name, std::string pathname)</argsstring>
        <name>Multimedia</name>
        <qualifiedname>Multimedia::Multimedia</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>pathname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/Multimedia.h" line="13" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_multimedia_1ab280f9ce1d0a1291c9b1ab876e854c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Multimedia::~Multimedia</definition>
        <argsstring>()</argsstring>
        <name>~Multimedia</name>
        <qualifiedname>Multimedia::~Multimedia</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/Multimedia.h" line="14" column="13" bodyfile="CPP/Multimedia.cpp" bodystart="9" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="class_multimedia_1ace0804f8019ed84df1f3c18eb28cf189" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>string Multimedia::getName</definition>
        <argsstring>() const</argsstring>
        <name>getName</name>
        <qualifiedname>Multimedia::getName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/Multimedia.h" line="15" column="17" bodyfile="CPP/Multimedia.cpp" bodystart="6" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="class_multimedia_1a4b330c898974e8b62cc3220d6381bd7c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>string Multimedia::getPathname</definition>
        <argsstring>() const</argsstring>
        <name>getPathname</name>
        <qualifiedname>Multimedia::getPathname</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/Multimedia.h" line="16" column="17" bodyfile="CPP/Multimedia.cpp" bodystart="12" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="class_multimedia_1a7f76261a215bae20b9fafa18acb5ebd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Multimedia::setName</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>setName</name>
        <qualifiedname>Multimedia::setName</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/Multimedia.h" line="17" column="10" bodyfile="CPP/Multimedia.cpp" bodystart="15" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="class_multimedia_1a11bfaef1f1f5351b15d75fd2c2a92928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Multimedia::setPathname</definition>
        <argsstring>(const std::string &amp;pathname)</argsstring>
        <name>setPathname</name>
        <qualifiedname>Multimedia::setPathname</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>pathname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/Multimedia.h" line="18" column="10" bodyfile="CPP/Multimedia.cpp" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_multimedia_1af3d889bdbf9c04809f11195d7a17448e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Multimedia::display</definition>
        <argsstring>(std::ostream &amp;os) const =0</argsstring>
        <name>display</name>
        <qualifiedname>Multimedia::display</qualifiedname>
        <reimplementedby refid="class_film_1a441f4fb605a7d46b906678c87040d707">display</reimplementedby>
        <reimplementedby refid="class_photo_1a8bfc54f6bb210e3fcbd7b5c501e38053">display</reimplementedby>
        <reimplementedby refid="class_video_1a5aa5abf5dc093c7eecab97f9cd30555d">display</reimplementedby>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/Multimedia.h" line="19" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_multimedia_1a1fa4ae371afc516559955b38e0392acb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Multimedia::play</definition>
        <argsstring>() const =0</argsstring>
        <name>play</name>
        <qualifiedname>Multimedia::play</qualifiedname>
        <reimplementedby refid="class_photo_1a98b55224b5f9bd016cb08aa2e9a64e46">play</reimplementedby>
        <reimplementedby refid="class_video_1a89e11497f4f200f387805b10bd42922d">play</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/Multimedia.h" line="20" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_multimedia_1a866891c1ac5118d2c0d5c1ae12482d09" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Multimedia::write</definition>
        <argsstring>(std::ofstream &amp;ofs) const</argsstring>
        <name>write</name>
        <qualifiedname>Multimedia::write</qualifiedname>
        <reimplementedby refid="class_film_1a64700dae3afe5511027b24c72d28888f">write</reimplementedby>
        <reimplementedby refid="class_photo_1ab86310b55a9c963863d2984087487ac5">write</reimplementedby>
        <reimplementedby refid="class_video_1a3938693176fc86983e19c540ab7e7d56">write</reimplementedby>
        <param>
          <type>std::ofstream &amp;</type>
          <declname>ofs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/Multimedia.h" line="22" column="18" bodyfile="CPP/Multimedia.cpp" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_multimedia_1aabaabcf03f9b98c31b3dd9958d1be1aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Multimedia::read</definition>
        <argsstring>(std::ifstream &amp;ifs)</argsstring>
        <name>read</name>
        <qualifiedname>Multimedia::read</qualifiedname>
        <reimplementedby refid="class_film_1ac739dc43e2e83ec751274820e1a76a06">read</reimplementedby>
        <reimplementedby refid="class_photo_1a15d767ea069022f368e53ccb85c2af54">read</reimplementedby>
        <reimplementedby refid="class_video_1aa719dd7639f1cf178d1f2ad0a3f6a5f7">read</reimplementedby>
        <param>
          <type>std::ifstream &amp;</type>
          <declname>ifs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/Multimedia.h" line="23" column="18" bodyfile="CPP/Multimedia.cpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_multimedia_1a142f01a2d7c1f55a4a32b53303bd692e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string Multimedia::getClassName</definition>
        <argsstring>() const =0</argsstring>
        <name>getClassName</name>
        <qualifiedname>Multimedia::getClassName</qualifiedname>
        <reimplementedby refid="class_film_1a5d1cfd8484d03b7df2c430f8e37f1d08">getClassName</reimplementedby>
        <reimplementedby refid="class_photo_1a2199b058723d50a474a03f4a937ff83e">getClassName</reimplementedby>
        <reimplementedby refid="class_video_1a1dcd090b6854b30bf9f2f233dc0faff7">getClassName</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/Multimedia.h" line="26" column="25"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>Film</label>
        <link refid="class_film"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Multimedia</label>
        <link refid="class_multimedia"/>
      </node>
      <node id="2">
        <label>Photo</label>
        <link refid="class_photo"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Video</label>
        <link refid="class_video"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="CPP/Multimedia.h" line="7" column="1" bodyfile="CPP/Multimedia.h" bodystart="7" bodyend="27"/>
    <listofallmembers>
      <member refid="class_multimedia_1af3d889bdbf9c04809f11195d7a17448e" prot="public" virt="pure-virtual"><scope>Multimedia</scope><name>display</name></member>
      <member refid="class_multimedia_1a142f01a2d7c1f55a4a32b53303bd692e" prot="public" virt="pure-virtual"><scope>Multimedia</scope><name>getClassName</name></member>
      <member refid="class_multimedia_1ace0804f8019ed84df1f3c18eb28cf189" prot="public" virt="non-virtual"><scope>Multimedia</scope><name>getName</name></member>
      <member refid="class_multimedia_1a4b330c898974e8b62cc3220d6381bd7c" prot="public" virt="non-virtual"><scope>Multimedia</scope><name>getPathname</name></member>
      <member refid="class_multimedia_1a7106753d618df92d53b89328b7ecfe7f" prot="public" virt="non-virtual"><scope>Multimedia</scope><name>Multimedia</name></member>
      <member refid="class_multimedia_1a337b5ed495d27cd9d0319f90c898cf96" prot="public" virt="non-virtual"><scope>Multimedia</scope><name>Multimedia</name></member>
      <member refid="class_multimedia_1a58f835cc9f6520566094574971ce4033" prot="private" virt="non-virtual"><scope>Multimedia</scope><name>name</name></member>
      <member refid="class_multimedia_1ae419d92973bfff542aa0b5e355436c52" prot="private" virt="non-virtual"><scope>Multimedia</scope><name>pathname</name></member>
      <member refid="class_multimedia_1a1fa4ae371afc516559955b38e0392acb" prot="public" virt="pure-virtual"><scope>Multimedia</scope><name>play</name></member>
      <member refid="class_multimedia_1aabaabcf03f9b98c31b3dd9958d1be1aa" prot="public" virt="virtual"><scope>Multimedia</scope><name>read</name></member>
      <member refid="class_multimedia_1a7f76261a215bae20b9fafa18acb5ebd2" prot="public" virt="non-virtual"><scope>Multimedia</scope><name>setName</name></member>
      <member refid="class_multimedia_1a11bfaef1f1f5351b15d75fd2c2a92928" prot="public" virt="non-virtual"><scope>Multimedia</scope><name>setPathname</name></member>
      <member refid="class_multimedia_1a866891c1ac5118d2c0d5c1ae12482d09" prot="public" virt="virtual"><scope>Multimedia</scope><name>write</name></member>
      <member refid="class_multimedia_1ab280f9ce1d0a1291c9b1ab876e854c94" prot="public" virt="virtual"><scope>Multimedia</scope><name>~Multimedia</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
