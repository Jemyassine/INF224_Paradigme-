<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_multimedia_manager_8h" kind="file" language="C++">
    <compoundname>MultimediaManager.h</compoundname>
    <includes refid="_photo_8h" local="yes">Photo.h</includes>
    <includes refid="_video_8h" local="yes">Video.h</includes>
    <includes refid="_film_8h" local="yes">Film.h</includes>
    <includes refid="_group_8h" local="yes">Group.h</includes>
    <includes local="no">map</includes>
    <includes local="no">iostream</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includedby refid="_multimedia_manager_8cpp" local="yes">CPP/MultimediaManager.cpp</includedby>
    <includedby refid="_multimedia_manager_test_8h" local="yes">CPP/MultimediaManagerTest.h</includedby>
    <includedby refid="_server_tools_8h" local="yes">CPP/ServerTools.h</includedby>
    <includedby refid="server_8cpp" local="yes">CPP/server.cpp</includedby>
    <incdepgraph>
      <node id="8">
        <label>Film.h</label>
        <link refid="_film_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Group.h</label>
        <link refid="_group_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Multimedia.h</label>
        <link refid="_multimedia_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>CPP/MultimediaManager.h</label>
        <link refid="_multimedia_manager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Photo.h</label>
        <link refid="_photo_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Video.h</label>
        <link refid="_video_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>fstream</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="10">
        <label>list</label>
      </node>
      <node id="12">
        <label>map</label>
      </node>
      <node id="11">
        <label>memory</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>CPP/MultimediaManager.h</label>
        <link refid="_multimedia_manager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>CPP/MultimediaManagerTest.h</label>
        <link refid="_multimedia_manager_test_8h_source"/>
      </node>
      <node id="3">
        <label>CPP/ServerTools.h</label>
        <link refid="_server_tools_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_multimedia_manager" prot="public">MultimediaManager</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="_multimedia_manager_8h_1a2d916b1e4343c54b7b0f0126a9a78ac6" prot="public" static="no">
        <name>version_etape_9</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/MultimediaManager.h" line="3" column="17" bodyfile="CPP/MultimediaManager.h" bodystart="3" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_multimedia_manager_8h_1a05d41e4e110e20f6ae397be147ab1980" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="class_multimedia" kindref="compound">Multimedia</ref> &gt;</type>
        <definition>using MultimediaPtr =  std::shared_ptr&lt;Multimedia&gt;</definition>
        <argsstring></argsstring>
        <name>MultimediaPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/MultimediaManager.h" line="13" column="1" bodyfile="CPP/MultimediaManager.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_multimedia_manager_8h_1af7b580c4f07b0bcbed28edff0cd65659" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="class_photo" kindref="compound">Photo</ref> &gt;</type>
        <definition>using PhotoPtr =  std::shared_ptr&lt;Photo&gt;</definition>
        <argsstring></argsstring>
        <name>PhotoPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/MultimediaManager.h" line="14" column="1" bodyfile="CPP/MultimediaManager.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_multimedia_manager_8h_1a6b30147e1a61917fc566f24d19b34049" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="class_video" kindref="compound">Video</ref> &gt;</type>
        <definition>using VideoPtr =  std::shared_ptr&lt;Video&gt;</definition>
        <argsstring></argsstring>
        <name>VideoPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/MultimediaManager.h" line="15" column="1" bodyfile="CPP/MultimediaManager.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_multimedia_manager_8h_1acd416dd4e2edfcd96191c1958103b6ec" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="class_film" kindref="compound">Film</ref> &gt;</type>
        <definition>using FilmPtr =  std::shared_ptr&lt;Film&gt;</definition>
        <argsstring></argsstring>
        <name>FilmPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/MultimediaManager.h" line="16" column="1" bodyfile="CPP/MultimediaManager.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_multimedia_manager_8h_1a39c11e38578c734765a185f82eb65d45" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="class_group" kindref="compound">Group</ref> &gt;</type>
        <definition>using GroupPtr =  std::shared_ptr&lt;Group&gt;</definition>
        <argsstring></argsstring>
        <name>GroupPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/MultimediaManager.h" line="17" column="1" bodyfile="CPP/MultimediaManager.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_multimedia_manager_8h_1a51e11435b7f4b269772638947dad3f28" prot="public" static="no">
        <type>std::map&lt; std::string, MultimediaPtr &gt;</type>
        <definition>using multimediaTable =  std::map&lt;std::string, MultimediaPtr&gt;</definition>
        <argsstring></argsstring>
        <name>multimediaTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/MultimediaManager.h" line="19" column="1" bodyfile="CPP/MultimediaManager.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_multimedia_manager_8h_1a865184cb4eb7240e6b895a42a3ae00e3" prot="public" static="no">
        <type>std::map&lt; std::string, GroupPtr &gt;</type>
        <definition>using groupTable =  std::map&lt;std::string, GroupPtr&gt;</definition>
        <argsstring></argsstring>
        <name>groupTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CPP/MultimediaManager.h" line="20" column="1" bodyfile="CPP/MultimediaManager.h" bodystart="20" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>MULTIMEDIA_MANAGER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MULTIMEDIA_MANAGER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>version_etape_9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Photo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Video.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Film.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Group.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">MultimediaPtr<sp/>=<sp/>std::shared_ptr&lt;Multimedia&gt;;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">PhotoPtr<sp/>=<sp/>std::shared_ptr&lt;Photo&gt;;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">VideoPtr<sp/>=<sp/>std::shared_ptr&lt;Video&gt;;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">FilmPtr<sp/>=<sp/>std::shared_ptr&lt;Film&gt;;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">GroupPtr<sp/>=<sp/>std::shared_ptr&lt;Group&gt;;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">multimediaTable<sp/>=<sp/>std::map&lt;std::string,<sp/>MultimediaPtr&gt;;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">groupTable<sp/>=<sp/>std::map&lt;std::string,<sp/>GroupPtr&gt;;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_multimedia_manager" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MultimediaManager<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>multimediaTable<sp/>multimediaTable;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>groupTable<sp/>groupTable;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>MultimediaManager()<sp/>{};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>~MultimediaManager(){};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Methods<sp/>to<sp/>create<sp/>and<sp/>add<sp/>objects<sp/>to<sp/>the<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>PhotoPtr<sp/>createPhoto(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>pathname,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>latitude,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>longitude);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>VideoPtr<sp/>createVideo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>pathname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>duration);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>FilmPtr<sp/>createFilm(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>pathname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>duration,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>chapters,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>GroupPtr<sp/>createGroup<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Methods<sp/>to<sp/>find<sp/>and<sp/>display<sp/>objects<sp/>or<sp/>groups</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>MultimediaPtr<sp/>findMultimedia(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>displayMultimedia(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/>std::ostream&amp;<sp/>os)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>displayGroup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/>std::ostream&amp;<sp/>os)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Method<sp/>to<sp/>play<sp/>a<sp/>multimedia<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>playMultimedia(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>playGroup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Methods<sp/>to<sp/>remove<sp/>objects<sp/>or<sp/>groups</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeMultimedia(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeGroup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Method<sp/>to<sp/>list<sp/>all<sp/>multimedia<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>listAllMultimedias(std::ostream&amp;<sp/>os)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Method<sp/>to<sp/>list<sp/>all<sp/>groups</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>listALLGroups(std::ostream&amp;<sp/>os)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>save(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>load(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Factory<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MultimediaPtr<sp/>createObject(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>className);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="CPP/MultimediaManager.h"/>
  </compounddef>
</doxygen>
