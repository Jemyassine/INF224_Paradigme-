<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__photo_8h_source" xml:lang="en-US">
<title>Photo.h</title>
<indexterm><primary>CPP/Photo.h</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;PHOTO_H</emphasis>
2 <emphasis role="preprocessor">#define&#32;PHOTO_H</emphasis>
3 
4 <emphasis role="preprocessor">#include&#32;&quot;Multimedia.h&quot;</emphasis>
5 
6 <emphasis role="keyword">class&#32;</emphasis>Photo&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;Multimedia&#32;{
7 <emphasis role="keyword">private</emphasis>:
8 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;latitude;
9 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;longitude;
10 
11 <emphasis role="keyword">public</emphasis>:
12 &#32;&#32;&#32;&#32;Photo()&#32;:&#32;Multimedia(),&#32;latitude(0),&#32;longitude(0)&#32;{}
13 &#32;&#32;&#32;&#32;Photo(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;name,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;pathname,&#32;<emphasis role="keywordtype">double</emphasis>&#32;latitude,&#32;<emphasis role="keywordtype">double</emphasis>&#32;longitude);
14 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;~Photo();
15 
16 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;display(std::ostream&amp;&#32;os)&#32;<emphasis role="keyword">const&#32;override</emphasis>;
17 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;play()&#32;<emphasis role="keyword">const&#32;override</emphasis>;
18 
19 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Serialization</emphasis>
20 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;write(std::ofstream&amp;&#32;ofs)&#32;<emphasis role="keyword">const&#32;override</emphasis>;
21 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;read(std::ifstream&amp;&#32;ifs)&#32;<emphasis role="keyword">override</emphasis>;
22 
23 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Factory&#32;method</emphasis>
24 &#32;&#32;&#32;&#32;std::string&#32;getClassName()<emphasis role="keyword">&#32;const&#32;override&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Photo&quot;</emphasis>;&#32;}
25 };
26 
27 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
