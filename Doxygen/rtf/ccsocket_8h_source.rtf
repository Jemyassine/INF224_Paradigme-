{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s6\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ccsocket.h\par \pard\plain 
{\tc\tcl2 \v CPP/ccsocket.h}
{\xe \v CPP/ccsocket.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 //}\par
2 {\cf20 //  ccsocket: C++ Classes for TCP/IP and UDP Datagram INET Sockets.}\par
3 {\cf20 //  (c) Eric Lecolinet 2016/2020 - https://www.telecom-paris.fr/~elc}\par
4 {\cf20 //}\par
5 {\cf20 //  - Socket: TCP/IP or UDP/Datagram IPv4 socket}\par
6 {\cf20 //  - ServerSocket: TCP/IP Socket Server}\par
7 {\cf20 //  - SocketBuffer: preserves record boundaries when exchanging data}\par
8 {\cf20 //   between TCP/IP sockets.}\par
9 {\cf20 //}\par
10 \par
11 {\cf21 #ifndef ccuty_ccsocket}\par
12 {\cf21 #define ccuty_ccsocket 1}\par
13 \par
14 {\cf21 #include <string>}\par
15 \par
16 {\cf21 #if defined(_WIN32) || defined(_WIN64)}\par
17 {\cf21 #include <winsock2.h>}\par
18 {\cf21 #define SOCKSIZE int}\par
19 {\cf21 #define SOCKDATA char}\par
20 \par
21 {\cf21 #else}\par
22 {\cf21 #include <sys/types.h>}\par
23 {\cf21 #include <sys/socket.h>}\par
24 {\cf21 #define SOCKET int}\par
25 {\cf21 #define SOCKADDR struct sockaddr}\par
26 {\cf21 #define SOCKADDR_IN struct sockaddr_in}\par
27 {\cf21 #define INVALID_SOCKET -1}\par
28 {\cf21 #define SOCKSIZE ssize_t}\par
29 {\cf21 #define SOCKDATA void}\par
30 {\cf21 #endif}\par
31 \par
32 {\cf20 // ignore SIGPIPES when possible}\par
33 {\cf21 #if defined(MSG_NOSIGNAL)}\par
34 {\cf21 #  define NO_SIGPIPE_(flags) (flags | MSG_NOSIGNAL)}\par
35 {\cf21 #else}\par
36 {\cf21 #  define NO_SIGPIPE_(flags) (flags)}\par
37 {\cf21 #endif}\par
38 \par
46 {\cf17 class }Socket \{\par
47 {\cf17 public}:\par
52   {\cf17 enum} Errors \{ Failed = -1, InvalidSocket = -2, UnknownHost = -3 \};\par
53 \par
57   {\cf17 static} {\cf18 void} startup();\par
58   {\cf17 static} {\cf18 void} cleanup();\par
60 \par
65   Socket({\cf18 int} type = SOCK_STREAM);\par
66 \par
68   Socket({\cf18 int} type, SOCKET sockfd);\par
69 \par
71   ~Socket();\par
72 \par
77   {\cf18 int} connect({\cf17 const} std::string& host, {\cf18 int} port);\par
78 \par
81   {\cf18 int} bind({\cf18 int} port);\par
82 \par
86   {\cf18 int} bind({\cf17 const} std::string& host, {\cf18 int} port);\par
87 \par
89   {\cf18 int} close();\par
90 \par
92   {\cf18 bool} isClosed(){\cf17  const }\{ {\cf19 return} sockfd_ == INVALID_SOCKET; \}\par
93 \par
95   SOCKET descriptor() \{ {\cf19 return} sockfd_; \}\par
96 \par
98   {\cf18 void} shutdownInput();\par
99 \par
101   {\cf18 void} shutdownOutput();\par
102 \par
108   SOCKSIZE send({\cf17 const} SOCKDATA* buf, {\cf18 size_t} len, {\cf18 int} flags = 0) \{\par
109     return ::send(sockfd_, buf, len, NO_SIGPIPE_(flags));\par
110   \}\par
111 \par
117   SOCKSIZE receive(SOCKDATA* buf, {\cf18 size_t} len, {\cf18 int} flags = 0) \{\par
118     return ::recv(sockfd_, buf, len, flags);\par
119   \}\par
120 \par
121 {\cf21 #if !defined(_WIN32) && !defined(_WIN64)}\par
122 \par
124   SOCKSIZE sendTo({\cf18 void} {\cf17 const}* buf, {\cf18 size_t} len, {\cf18 int} flags,\par
125                   SOCKADDR {\cf17 const}* to, socklen_t addrlen) \{\par
126     return ::sendto(sockfd_, buf, len, NO_SIGPIPE_(flags), to, addrlen);\par
127   \}\par
128 \par
130   SOCKSIZE receiveFrom({\cf18 void}* buf, {\cf18 size_t} len, {\cf18 int} flags,\par
131                        SOCKADDR* from, socklen_t* addrlen) \{\par
132     return ::recvfrom(sockfd_, buf, len, flags, from, addrlen);\par
133   \}\par
134 \par
136   {\cf18 int} setReceiveBufferSize({\cf18 int} size);\par
137 \par
139   {\cf18 int} setReuseAddress({\cf18 bool});\par
140 \par
142   {\cf18 int} setSendBufferSize({\cf18 int} size);\par
143 \par
145   {\cf18 int} setSoLinger({\cf18 bool}, {\cf18 int} linger);\par
146 \par
148   {\cf18 int} setSoTimeout({\cf18 int} timeout);\par
149 \par
151   {\cf18 int} setTcpNoDelay({\cf18 bool});\par
152 \par
154   {\cf18 int} getReceiveBufferSize() {\cf17 const};\par
155 \par
157   {\cf18 bool} getReuseAddress() {\cf17 const};\par
158 \par
160   {\cf18 int} getSendBufferSize() {\cf17 const};\par
161 \par
163   {\cf18 bool} getSoLinger({\cf18 int}& linger) {\cf17 const};\par
164 \par
166   {\cf18 int} getSoTimeout() {\cf17 const};\par
167 \par
169   {\cf18 bool} getTcpNoDelay() {\cf17 const};\par
170 \par
171 {\cf21 #endif}\par
172 \par
173 {\cf17 private}:\par
174   {\cf17 friend} {\cf17 class }ServerSocket;\par
175 \par
176   {\cf20 // Initializes a local INET4 address, returns 0 on success, -1 otherwise.}\par
177   {\cf18 int} setLocalAddress(SOCKADDR_IN& addr, {\cf18 int} port);\par
178   {\cf20 // Initializes a remote INET4 address, returns 0 on success, -1 otherwise.}\par
179   {\cf18 int} setAddress(SOCKADDR_IN& addr, {\cf17 const} std::string& host, {\cf18 int} port);\par
180 \par
181   SOCKET sockfd_\{\};\par
182   Socket({\cf17 const} Socket&) = {\cf17 delete};\par
183   Socket& operator=({\cf17 const} Socket&) = {\cf17 delete};\par
184   Socket& operator=(Socket&&) = {\cf17 delete};\par
185 \};\par
186 \par
187 \par
188 \par
192 {\cf17 class }ServerSocket \{\par
193 {\cf17 public}:\par
195   ServerSocket();\par
196 \par
197   ~ServerSocket();\par
198 \par
202   Socket* accept();\par
203 \par
206   {\cf18 int} bind({\cf18 int} port, {\cf18 int} backlog = 50);\par
207 \par
209   {\cf18 int} close();\par
210 \par
212   {\cf18 bool} isClosed(){\cf17  const }\{ {\cf19 return} sockfd_ == INVALID_SOCKET; \}\par
213 \par
215   SOCKET descriptor() \{ {\cf19 return} sockfd_; \}\par
216 \par
217 {\cf21 #if !defined(_WIN32) && !defined(_WIN64)}\par
218 \par
220   {\cf18 int} setReceiveBufferSize({\cf18 int} size);\par
221 \par
223   {\cf18 int} setReuseAddress({\cf18 bool});\par
224 \par
226   {\cf18 int}  setSoTimeout({\cf18 int} timeout);\par
227 \par
229   {\cf18 int} setTcpNoDelay({\cf18 bool});\par
230 \par
231 {\cf21 #endif}\par
232 \par
233 {\cf17 private}:\par
234   Socket* createSocket(SOCKET);\par
235   SOCKET sockfd_\{\};  {\cf20 // listening socket.}\par
236   ServerSocket({\cf17 const} ServerSocket&) = {\cf17 delete};\par
237   ServerSocket& operator=({\cf17 const} ServerSocket&) = {\cf17 delete};\par
238   ServerSocket& operator=(ServerSocket&&) = {\cf17 delete};\par
239 \};\par
240 \par
241 \par
276 {\cf17 class }SocketBuffer \{\par
277 {\cf17 public}:\par
283   SocketBuffer(Socket*, {\cf18 size_t} inputSize = 8192, {\cf18 size_t} ouputSize = 8192);\par
284   SocketBuffer(Socket&, {\cf18 size_t} inputSize = 8192, {\cf18 size_t} ouputSize = 8192);\par
286 \par
287   ~SocketBuffer();\par
288 \par
300   SOCKSIZE readLine(std::string& message);\par
301 \par
309   SOCKSIZE writeLine({\cf17 const} std::string& message);\par
310 \par
313   SOCKSIZE read({\cf18 char}* buffer, {\cf18 size_t} len);\par
314 \par
317   SOCKSIZE write({\cf17 const} {\cf18 char}* str, {\cf18 size_t} len);\par
318 \par
320   Socket* socket() \{ {\cf19 return} sock_; \}\par
321 \par
327   {\cf18 void} setReadSeparator({\cf18 int} separ);\par
328   {\cf18 int} readSeparator(){\cf17  const }\{ {\cf19 return} insep_; \}\par
329   {\cf20 // @\}}\par
330 \par
336   {\cf18 void} setWriteSeparator({\cf18 int} separ);\par
337   {\cf18 int} writeSeparator(){\cf17  const }\{ {\cf19 return} outsep_; \}\par
338   {\cf20 // @\}}\par
339 \par
340 {\cf17 private}:\par
341   SocketBuffer({\cf17 const} SocketBuffer&) = {\cf17 delete};\par
342   SocketBuffer& operator=({\cf17 const} SocketBuffer&) = {\cf17 delete};\par
343   SocketBuffer& operator=(SocketBuffer&&) = {\cf17 delete};\par
344 \par
345 {\cf17 protected}:\par
346   {\cf18 bool} retrieveLine(std::string& str, SOCKSIZE received);\par
347   {\cf18 size_t} insize_\{\}, outsize_\{\};\par
348   {\cf18 int} insep_\{\}, outsep_\{\};\par
349   Socket* sock_\{\};\par
350   {\cf17 struct }InputBuffer* in_\{\};\par
351 \};\par
352 \par
353 {\cf21 #endif}\par
}
}